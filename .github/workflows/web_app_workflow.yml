on: [push]
name: Azure ARM
jobs:
  build-and-deploy-infra:
    name: Deploy infra
    runs-on: ubuntu-latest
    outputs:
      staticWebAppName: ${{ steps.armdeploy.outputs.staticWebAppName }}
    steps:

    - name: github checkout
      uses: actions/checkout@main

    - name: azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: deploy infra
      id: armdeploy
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./infra/main.bicep
        parameters: ./infra/main.parameters.json
        failOnStdErr: false

  build_and_deploy_job:
    # if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    needs: build-and-deploy-infra
    name: Deploy app
    steps:

      - name: az cli login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: "echo static web app name"
        run: echo "SWA name ${{ needs.build-and-deploy-infra.outputs.staticWebAppName }}"
          
      - name: "Add a mask to the SWA Token"
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "::add-mask::$(az staticwebapp secrets list -n ${{ needs.build-and-deploy-infra.outputs.staticWebAppName }} | jq -r '.properties.apiKey')"

      - name: "get swa token"
        uses: azure/CLI@v1
        with:
          inlineScript: |
            echo "SWA_TOKEN=$(az staticwebapp secrets list -n ${{ needs.build-and-deploy-infra.outputs.staticWebAppName }} | jq -r '.properties.apiKey')" >> $GITHUB_ENV
    
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.SWA_TOKEN }}
          action: "upload"
          app_location: "/app"
          api_location: "/api"
          config_file_location: "/"